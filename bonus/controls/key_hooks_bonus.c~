/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   key_hooks_bonus.c                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mlebard <mlebard@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/03/15 14:49:59 by mlebard           #+#    #+#             */
/*   Updated: 2021/04/27 03:12:27 by mlebard          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../include/cub3d_bonus.h"

void		*play_audio(void *arg)
{
	char		*audiofile;
	char		*command;
	int			ret;

	audiofile = (char *)(arg);
	command = ft_strjoin("aplay ", audiofile);
	if (command == NULL)
	{
		printf("ERROR MALLOC AUDIO\n");
	}
	ret = system(command);
	free(command);
	if (ret == -1)
	{
		printf("ERROR SYSTEM AUDIO\n");
	}
	return (NULL);
}

void		audio(t_cub *cub, char *audiofile)
{
	pthread_create(&cub->audiothread, NULL, &play_audio, audiofile);
}


int		key_press(int keycode, t_cub *cub)
{
	if (keycode == XK_Escape)
		exit_done(cub);
	if (keycode == XK_w || keycode == XK_W)
		cub->keys |= KEY_W;
	else if (keycode == XK_s || keycode == XK_S)
		cub->keys |= KEY_S;
	else if (keycode == XK_a || keycode == XK_A)
		cub->keys |= KEY_A;
	else if (keycode == XK_d || keycode == XK_D)
		cub->keys |= KEY_D;
	else if (keycode == XK_Left)
		cub->keys |= KEY_LF_ARR;
	else if (keycode == XK_Right)
		cub->keys |= KEY_RG_ARR;
	else if (keycode == XK_Shift_L)
		cub->keys |= KEY_SHIFT;
	else if (keycode == XK_Up)
		cub->keys |= KEY_UP_ARR;
	else if (keycode == XK_Down)
		cub->keys |= KEY_DW_ARR;
	else if (keycode == XK_space)
		cub->keys |= KEY_SPACE;
	else if (keycode == XK_Control_L)
		cub->keys |= KEY_CTRL;
	else if (keycode == XK_m && cub->mini->off != 1)
		cub->mini->on = !cub->mini->on;
	else if (keycode == XK_p || keycode == XK_P)
		add_event_player_projectile(cub);
	else if (keycode == XK_h || keycode == XK_H)
		add_health(cub, 1);
	else if (keycode == XK_j || keycode == XK_J)
		remove_health(cub, 1);
	else if (keycode == XK_l || keycode == XK_L)
		audio(cub, "fireball.wav");
	if (keycode)
		printf("\e[1;91mpress:\e[0m\nkeycode: %d\nkeys: %d\n", keycode,
				cub->keys);
	return (0);
}

int		key_release(int keycode, t_cub *cub)
{
	if (keycode == XK_w || keycode == XK_W)
		cub->keys &= ~KEY_W;
	else if (keycode == XK_a || keycode == XK_A)
		cub->keys &= ~KEY_A;
	else if (keycode == XK_s || keycode == XK_S)
		cub->keys &= ~KEY_S;
	else if (keycode == XK_d || keycode == XK_D)
		cub->keys &= ~KEY_D;
	else if (keycode == XK_Left)
		cub->keys &= ~KEY_LF_ARR;
	else if (keycode == XK_Right)
		cub->keys &= ~KEY_RG_ARR;
	else if (keycode == XK_Up)
		cub->keys &= ~KEY_UP_ARR;
	else if (keycode == XK_Down)
		cub->keys &= ~KEY_DW_ARR;
	else if (keycode == XK_space)
		cub->keys &= ~KEY_SPACE;
	else if (keycode == XK_Control_L)
		cub->keys &= ~KEY_CTRL;
	else if (keycode == XK_Shift_L)
		cub->keys &= ~KEY_SHIFT;
	if (keycode)
		printf("\e[1;94mrelease:\e[0m\nkeycode: %d\nkeys: %d\n", keycode,
				cub->keys);
	return (0);
}

int		click_cross(t_cub *cub)
{
	exit_done(cub);
	return (0);
}
